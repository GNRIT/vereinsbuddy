generator client {
  provider      = "prisma-client-js"
  output        = "../generated/vereinsbuddy"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource vereindb {
  provider = "postgresql"
  url      = env("DATABASE_URL_VEREINSBUDDY")
}

model benutzerkonto {
  id           Int       @id @default(autoincrement())
  benutzername String    @unique @vereindb.VarChar(100)
  passwort     String    @vereindb.VarChar(255)
  aktiv        Boolean?  @default(true)
  person_id    Int
  Erstellt_am  DateTime? @map("Erstellt am") @vereindb.Date
  Geaendert_am DateTime? @map("Geaendert am") @vereindb.Date
  person       person    @relation(fields: [person_id], references: [id], onDelete: NoAction, onUpdate: Restrict, map: "benutzerkonto_person")

  @@index([person_id], map: "benutzerkonto_ibfk_1")
}

model person {
  id               Int                @id @default(autoincrement())
  vorname          String             @vereindb.VarChar(100)
  name             String             @vereindb.VarChar(100)
  geburtsdatum     DateTime?          @vereindb.Date
  strasse          String?            @vereindb.VarChar(255)
  hausnummer       String?            @vereindb.VarChar(32)
  postleitzahl     String?            @vereindb.VarChar(32)
  ort              String?            @vereindb.VarChar(255)
  email            String?            @vereindb.VarChar(255)
  handynr          String?            @vereindb.VarChar(32)
  Erstellt_am      DateTime?          @map("Erstellt am") @vereindb.Date
  Geaendert_am     DateTime?          @map("Geaendert am") @vereindb.Date
  benutzerkonto    benutzerkonto[]
  vereinszuordnung vereinszuordnung[]
}

model verein {
  id               Int                @id @default(autoincrement())
  name             String             @vereindb.VarChar(255)
  strasse          String             @vereindb.VarChar(100)
  hausnummer       String             @vereindb.VarChar(32)
  postleitzahl     String             @vereindb.VarChar(32)
  ort              String             @vereindb.VarChar(100)
  subdomain        String?            @unique @vereindb.VarChar(255)
  Erstellt_am      DateTime?          @map("Erstellt am") @vereindb.Date
  Geaendert_am     DateTime?          @map("Geaendert am") @vereindb.Date
  vereinszuordnung vereinszuordnung[]
}

model vereinszuordnung {
  id           Int       @id @default(autoincrement())
  person_id    Int
  verein_id    Int
  rolle        String?   @default("mitglied") @vereindb.VarChar(50)
  Erstellt_am  DateTime? @default(dbgenerated("CURRENT_DATE")) @map("Erstellt am") @vereindb.Date
  Geaendert_am DateTime? @map("Geaendert am") @vereindb.Date
  person       person    @relation(fields: [person_id], references: [id], onDelete: NoAction, onUpdate: Restrict, map: "vereinszuordnung_person")
  verein       verein    @relation(fields: [verein_id], references: [id], onDelete: NoAction, onUpdate: Restrict, map: "vereinszuordnung_verein")

  @@index([person_id], map: "vereinszuordnung_ibfk_1")
  @@index([verein_id], map: "vereinszuordnung_ibfk_2")
}
