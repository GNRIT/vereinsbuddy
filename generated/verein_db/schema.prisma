generator client {
  provider      = "prisma-client-js"
  output        = "../generated/verein_db"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource vereindb {
  provider = "postgresql"
  url      = env("DATABASE_URL_VEREINDB")
}

model allergie {
  id             Int         @id @default(autoincrement())
  jf_mitglied_id Int
  ff_mitglied_id Int
  allergie       String      @vereindb.VarChar(255)
  beschreibung   String?
  Erstellt_am    DateTime?   @map("Erstellt am") @vereindb.Date
  Geaendert_am   DateTime?   @map("Geaendert am") @vereindb.Date
  ff_mitglied    ff_mitglied @relation(fields: [ff_mitglied_id], references: [id], onDelete: NoAction, onUpdate: Restrict, map: "allergie_ibfk_1")
  jf_mitglied    jf_mitglied @relation(fields: [jf_mitglied_id], references: [id], onDelete: NoAction, onUpdate: Restrict, map: "allergie_ibfk_2")

  @@index([ff_mitglied_id], map: "FF_Mitglied_ID")
  @@index([jf_mitglied_id], map: "JF_Mitglied_ID")
}

model dienstgrad {
  id                     Int       @id @default(autoincrement())
  Abkuerzung_maennlich   String?   @map("Abkuerzung maennlich") @vereindb.VarChar(100)
  Beschreibung_maennlich String?   @map("Beschreibung maennlich")
  Abkuerzung_weiblich    String?   @map("Abkuerzung weiblich") @vereindb.VarChar(100)
  Beschreibung_weiblich  String?   @map("Beschreibung weiblich")
  Erstellt_am            DateTime? @map("Erstellt am") @vereindb.Date
  Geaendert_am           DateTime? @map("Geaendert am") @vereindb.Date
}

model dienstabend {
  id           Int          @id @default(autoincrement())
  datum        DateTime?    @vereindb.Timestamp(6)
  thema        String?      @vereindb.VarChar(255)
  Erstellt_am  DateTime     @map("Erstellt am") @vereindb.Date
  Geaendert_am DateTime?    @map("Geaendert am") @vereindb.Date
  einteilung   einteilung[]
}

model einheit {
  id           Int          @id @default(autoincrement())
  abkuerzung   String?      @vereindb.VarChar(255)
  beschreibung String?
  Erstellt_am  DateTime?    @map("Erstellt am") @vereindb.Date
  Geaendert_am DateTime?    @map("Geaendert am") @vereindb.Date
  einteilung   einteilung[]
}

model einsatz {
  id             Int          @id @default(autoincrement())
  einsatznummer  Int
  Datum_Anfang   DateTime     @map("Datum Anfang") @vereindb.Timestamp(6)
  Uhrzeit_Anfang DateTime     @map("Uhrzeit Anfang") @vereindb.Time(6)
  Datum_Ende     DateTime?    @map("Datum Ende") @vereindb.Date
  Uhrzeit_Ende   DateTime?    @map("Uhrzeit Ende") @vereindb.Time(6)
  beschreibung   String?
  strasse        String?      @vereindb.VarChar(255)
  hausnummer     String?      @vereindb.VarChar(32)
  postleitzahl   String?      @vereindb.VarChar(32)
  ort            String?      @vereindb.VarChar(255)
  art            einsatz_art
  Erstellt_am    DateTime?    @map("Erstellt am") @vereindb.Date
  Geaendert_am   DateTime?    @map("Geaendert am") @vereindb.Date
  einteilung     einteilung[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model einteilung {
  id             Int         @id @default(autoincrement())
  einsatz_id     Int
  dienstabend_id Int
  fahrzeug_id    Int
  ff_mitglied_id Int
  einheit_id     Int
  dienstabend    dienstabend @relation(fields: [dienstabend_id], references: [id], onDelete: NoAction, onUpdate: Restrict, map: "einteilung_dienstabend")
  einheit        einheit     @relation(fields: [einheit_id], references: [id], onDelete: NoAction, onUpdate: Restrict, map: "einteilung_einheit")
  einsatz        einsatz     @relation(fields: [einsatz_id], references: [id], onDelete: NoAction, onUpdate: Restrict, map: "einteilung_einsatz")
  fahrzeug       fahrzeug    @relation(fields: [fahrzeug_id], references: [id], onDelete: NoAction, onUpdate: Restrict, map: "einteilung_fahrzeug")
  ff_mitglied    ff_mitglied @relation(fields: [ff_mitglied_id], references: [id], onDelete: NoAction, onUpdate: Restrict, map: "einteilung_ff_mitglied")

  @@index([dienstabend_id], map: "einteilung_ibfk_1")
  @@index([einheit_id], map: "einteilung_ibfk_2")
  @@index([einsatz_id], map: "einteilung_ibfk_3")
  @@index([fahrzeug_id], map: "einteilung_ibfk_4")
  @@index([ff_mitglied_id], map: "einteilung_ibfk_5")
}

model fahrzeug {
  id                Int              @id @default(autoincrement())
  kennzeichen       String?          @vereindb.VarChar(100)
  fahrzeugtyp       String?          @vereindb.VarChar(100)
  besatzungsstaerke String?          @vereindb.VarChar(100)
  status            fahrzeug_status? @default(verfuegbar)
  Erstellt_am       DateTime?        @map("Erstellt am") @vereindb.Date
  Geaendert_am      DateTime?        @map("Geaendert am") @vereindb.Date
  einteilung        einteilung[]
}

model ff_mitglied {
  id                   Int                    @id @default(autoincrement())
  person_id            Int
  eintrittsdatum       DateTime               @vereindb.Date
  austrittsdatum       DateTime?              @vereindb.Date
  aufnahmedatum        DateTime?              @vereindb.Date
  status               ff_mitglied_status?    @default(aktiv)
  Erstellt_am          DateTime               @map("Erstellt am") @vereindb.Date
  Geaendert_am         DateTime?              @map("Geaendert am") @vereindb.Date
  allergie             allergie[]
  einteilung           einteilung[]
  ff_mitglied_lehrgang ff_mitglied_lehrgang[]
  mitglied_funktionen  mitglied_funktionen[]

  @@index([person_id], map: "ff_mitglied_ibfk_1")
}

model ff_mitglied_lehrgang {
  id              Int         @id @default(autoincrement())
  ff_mitglied_id  Int
  lehrgang_id     Int
  Datum_bestanden DateTime?   @map("Datum bestanden") @vereindb.Date
  Erstellt_am     DateTime?   @map("Erstellt am") @vereindb.Date
  Geaendert_am    DateTime?   @map("Geaendert am") @vereindb.Date
  ff_mitglied     ff_mitglied @relation(fields: [ff_mitglied_id], references: [id], onDelete: NoAction, onUpdate: Restrict, map: "ff_mitglied_lehrgang_ibfk_1")
  lehrgang        lehrgang    @relation(fields: [lehrgang_id], references: [id], onDelete: NoAction, onUpdate: Restrict, map: "ff_mitglied_lehrgang_ibfk_2")

  @@index([lehrgang_id], map: "Lehrgang_ID")
}

model funktion_ff {
  id           Int       @id @default(autoincrement())
  name         String    @vereindb.VarChar(100)
  ist_admin    Boolean?  @default(false)
  Erstellt_am  DateTime? @map("Erstellt am") @vereindb.Date
  Geaendert_am DateTime? @map("Geaendert am") @vereindb.Date
}

model funktion_jf {
  id           Int       @id @default(autoincrement())
  name         String    @vereindb.VarChar(100)
  ist_admin    Boolean?  @default(false)
  Erstellt_am  DateTime  @map("Erstellt am") @vereindb.Date
  Geaendert_am DateTime? @map("Geaendert am") @vereindb.Date
}

model jf_erziehungsberechtigter {
  id             Int         @id @default(autoincrement())
  jf_mitglied_id Int
  person_id      Int
  Erstellt_am    DateTime?   @map("Erstellt am") @vereindb.Date
  Geaendert_am   DateTime?   @map("Geaendert am") @vereindb.Date
  jf_mitglied    jf_mitglied @relation(fields: [jf_mitglied_id], references: [id], onDelete: NoAction, onUpdate: Restrict, map: "jf_erziehungsberechtigter_jf_mitglied")

  @@index([jf_mitglied_id], map: "jf_erziehungsberechtigter_ibfk_1")
  @@index([person_id], map: "jf_erziehungsberechtigter_ibfk_2")
}

model jf_mitglied {
  id                        Int                         @id @default(autoincrement())
  person_id                 Int
  eintrittsdatum            DateTime                    @vereindb.Date
  austrittsdatum            DateTime?                   @vereindb.Date
  aufnahmedatum             DateTime?                   @vereindb.Date
  status                    jf_mitglied_status?         @default(aktiv)
  Erstellt_am               DateTime?                   @map("Erstellt am") @vereindb.Date
  Geaendert_am              DateTime?                   @map("Geaendert am") @vereindb.Date
  allergie                  allergie[]
  jf_erziehungsberechtigter jf_erziehungsberechtigter[]

  @@index([person_id], map: "jf_mitglied_ibfk_1")
}

model lehrgang {
  id                   Int                    @id @default(autoincrement())
  Abk_rzung            String?                @map("Abk√ºrzung") @vereindb.VarChar(255)
  beschreibung         String?
  reihenfolge          Int?
  Erstellt_am          DateTime?              @map("Erstellt am") @vereindb.Date
  Geaendert_am         DateTime?              @map("Geaendert am") @vereindb.Date
  ff_mitglied_lehrgang ff_mitglied_lehrgang[]
}

model mitglied_funktionen {
  id           Int                     @id @default(autoincrement())
  mitglied_id  Int
  funktion_id  Int
  typ          mitglied_funktionen_typ
  Erstellt_am  DateTime?               @map("Erstellt am") @vereindb.Date
  Geaendert_am DateTime?               @map("Geaendert am") @vereindb.Date
  ff_mitglied  ff_mitglied             @relation(fields: [mitglied_id], references: [id], onDelete: NoAction, onUpdate: Restrict, map: "mitglied_funktionen_ff_mitglied")

  @@index([mitglied_id], map: "mitglied_funktionen_ibfk_1")
  @@index([funktion_id], map: "mitglied_funktionen_ibfk_2")
}

model mitglied_login {
  id           Int                @id @default(autoincrement())
  benutzer_id  Int
  mitglied_id  Int
  typ          mitglied_login_typ
  Erstellt_am  DateTime           @map("Erstellt am") @vereindb.Date
  Geaendert_am DateTime?          @map("Geaendert am") @vereindb.Date

  @@index([benutzer_id], map: "mitglied_login_ibfk_1")
  @@index([mitglied_id], map: "mitglied_login_ibfk_2")
}

model teilnahme {
  id               Int           @id @default(autoincrement())
  mitglied_id      Int
  veranstaltung_id Int
  typ              teilnahme_typ
  Erstellt_am      DateTime      @map("Erstellt am") @vereindb.Date
  Geaendert_am     DateTime?     @map("Geaendert am") @vereindb.Date

  @@index([veranstaltung_id], map: "teilnahme_ibfk_4")
  @@index([mitglied_id], map: "Mitglied_ID")
}

enum einsatz_art {
  brand
  hilfeleistung
  sonstiges
}

enum fahrzeug_status {
  verfuegbar
  im_einsatz    @map("im einsatz")
  in_wartung    @map("in wartung")
  ausser_dienst @map("ausser dienst")
}

enum ff_mitglied_status {
  aktiv
  anwaerter
  ausgetreten
}

enum jf_mitglied_status {
  aktiv
  anwaerter
  ausgetreten
}

enum mitglied_funktionen_typ {
  ff
  jf
}

enum mitglied_login_typ {
  ff
  jf
}

enum teilnahme_typ {
  einsatz
  dienstabend
}
