// Datasources f端r beide Datenbanken
datasource vereinsbuddy {
  provider = "mysql"
  url      = env("DATABASE_URL_vereinsbuddy")
}

datasource verein_db {
  provider = "mysql"
  url      = env("DATABASE_URL_verein_db")
}

// Modelle f端r die vereinsbuddy Datenbank
model Benutzerkonto {
  id           Int      @id @default(autoincrement())
  Benutzername String   @unique
  Passwort     String
  Aktiv        Boolean  @default(true)
  Person_ID    Int
  Erstellt_am  DateTime?
  Geaendert_am DateTime?
  Person       Person   @relation(fields: [Person_ID], references: [id])
}

model Person {
  id            Int      @id @default(autoincrement())
  Vorname       String
  Name          String
  Geburtsdatum  DateTime?
  Strasse       String?
  Hausnummer    String?
  Postleitzahl  String?
  Ort           String?
  Email         String?
  HandyNr       String?
  Erstellt_am   DateTime?
  Geaendert_am  DateTime?
  Benutzerkonto Benutzerkonto[]
  Vereinszuordnung Vereinszuordnung[]
}

model Verein {
  id           Int      @id @default(autoincrement())
  Name         String
  Strasse      String
  Hausnummer   String
  Postleitzahl String
  Ort          String
  Subdomain    String   @unique
  Erstellt_am  DateTime?
  Geaendert_am DateTime?
  Vereinszuordnung Vereinszuordnung[]
}

model Vereinszuordnung {
  id         Int      @id @default(autoincrement())
  Person_ID  Int
  Verein_ID  Int
  Rolle      Rolle    @default(mitglied)
  Erstellt_am DateTime @default(now())
  Geaendert_am DateTime?
  Person     Person   @relation(fields: [Person_ID], references: [id])
  Verein     Verein   @relation(fields: [Verein_ID], references: [id])
}

enum Rolle {
  mitglied
  admin
}

// Modelle f端r die verein_db Datenbank (Beispiel - anpassen nach Bedarf)
model allergie {
  ID             Int         @id @default(autoincrement())
  JF_Mitglied_ID Int
  FF_Mitglied_ID Int
  Allergie       String      @vereindb.VarChar(255)
  Beschreibung   String?     @vereindb.Text
  Erstellt_am    DateTime?   @map("Erstellt am") @vereindb.Date
  Geaendert_am   DateTime?   @map("Geaendert am") @vereindb.Date
  ff_mitglied    ff_mitglied @relation(fields: [FF_Mitglied_ID], references: [ID], onUpdate: Restrict, map: "allergie_ibfk_1")
  jf_mitglied    jf_mitglied @relation(fields: [JF_Mitglied_ID], references: [ID], onUpdate: Restrict, map: "allergie_ibfk_2")

  @@index([FF_Mitglied_ID], map: "FF_Mitglied_ID")
  @@index([JF_Mitglied_ID], map: "JF_Mitglied_ID")
  @@ignore
}

model dienstgrad {
  ID                     Int       @id @default(autoincrement())
  Abkuerzung_maennlich   String?   @map("Abkuerzung maennlich") @vereindb.VarChar(100)
  Beschreibung_maennlich String?   @map("Beschreibung maennlich") @vereindb.Text
  Abkuerzung_weiblich    String?   @map("Abkuerzung weiblich") @vereindb.VarChar(100)
  Beschreibung_weiblich  String?   @map("Beschreibung weiblich") @vereindb.Text
  Erstellt_am            DateTime? @map("Erstellt am") @vereindb.Date
  Geaendert_am           DateTime? @map("Geaendert am") @vereindb.Date
}

model dientsabend {
  ID           Int       @id @default(autoincrement())
  Datum        DateTime  @vereindb.DateTime(0)
  Thema        String?   @vereindb.VarChar(255)
  Erstellt_am  DateTime  @map("Erstellt am") @vereindb.Date
  Geaendert_am DateTime? @map("Geaendert am") @vereindb.Date
}

model einheit {
  ID           Int          @id @default(autoincrement())
  Abkuerzung   String?      @vereindb.VarChar(255)
  Beschreibung String?      @vereindb.Text
  Erstellt_am  DateTime?    @map("Erstellt am") @vereindb.Date
  Geaendert_am DateTime?    @map("Geaendert am") @vereindb.Date
  einteilung   einteilung[] @ignore
}

model einsatz {
  ID             Int          @id @default(autoincrement())
  Einsatznummer  Int
  Datum_Anfang   DateTime     @map("Datum Anfang") @vereindb.DateTime(0)
  Uhrzeit_Anfang DateTime     @map("Uhrzeit Anfang") @vereindb.Time(0)
  Datum_Ende     DateTime?    @map("Datum Ende") @vereindb.Date
  Uhrzeit_Ende   DateTime?    @map("Uhrzeit Ende") @vereindb.Time(0)
  Beschreibung   String?      @vereindb.Text
  Strasse        String?      @vereindb.VarChar(255)
  Hausnummer     String?      @vereindb.VarChar(32)
  Postleitzahl   String?      @vereindb.VarChar(32)
  Ort            String?      @vereindb.VarChar(255)
  Art            einsatz_Art
  Erstellt_am    DateTime?    @map("Erstellt am") @vereindb.Date
  Geaendert_am   DateTime?    @map("Geaendert am") @vereindb.Date
  einteilung     einteilung[] @ignore
}

model einteilung {
  ID             Int          @id @default(autoincrement())
  Einsatz_ID     Int
  Dienstabend_ID Int
  Fahrzeug_ID    Int
  FF_Mitglied_ID Int
  Einheit_ID     Int
  einheit        einheit     @relation(fields: [Einheit_ID], references: [ID], onDelete: Cascade, map: "einteilung_ibfk_2")
  einsatz        einsatz     @relation(fields: [Einsatz_ID], references: [ID], onDelete: Cascade, map: "einteilung_ibfk_3")
  fahrzeug       fahrzeug    @relation(fields: [Fahrzeug_ID], references: [ID], onDelete: Cascade, map: "einteilung_ibfk_4")
  ff_mitglied    ff_mitglied @relation(fields: [FF_Mitglied_ID], references: [ID], onDelete: Cascade, map: "einteilung_ibfk_5")

  @@index([Dienstabend_ID], map: "Dienstabend_ID")
  @@index([Einheit_ID], map: "Einheit_ID")
  @@index([Einsatz_ID], map: "Einsatz_ID")
  @@index([FF_Mitglied_ID], map: "FF_Mitglied_ID")
  @@index([Fahrzeug_ID], map: "Fahrzeug_ID")
  @@ignore
}

model fahrzeug {
  ID                Int          @id @default(autoincrement())
  Kennzeichen       String?      @vereindb.VarChar(100)
  Besatzungsstaerke String?      @vereindb.VarChar(100)
  Erstellt_am       DateTime?    @map("Erstellt am") @vereindb.Date
  Geaendert_am      DateTime?    @map("Geaendert am") @vereindb.Date
  einteilung        einteilung[] @ignore
}

model ff_mitglied {
  ID                   Int                    @id @default(autoincrement())
  Person_ID            Int
  Eintrittsdatum       DateTime               @vereindb.Date
  Austrittsdatum       DateTime?              @vereindb.Date
  Aufnahmedatum        DateTime?              @vereindb.Date
  Status               ff_mitglied_Status     @default(aktiv)
  Erstellt_am          DateTime               @map("Erstellt am") @vereindb.Date
  Geaendert_am         DateTime?              @map("Geaendert am") @vereindb.Date
  allergie             allergie[]             @ignore
  einteilung           einteilung[]           @ignore
  person               person                 @relation(fields: [Person_ID], references: [ID], onUpdate: Restrict, map: "ff_mitglied_ibfk_1")
  ff_mitglied_lehrgang ff_mitglied_lehrgang[]
  mitglied_funktionen  mitglied_funktionen[]

  @@index([Person_ID], map: "ff_mitglied_ibfk_1")
}

model ff_mitglied_lehrgang {
  ID              Int         @id @default(autoincrement())
  FF_Mitglied_ID  Int
  Lehrgang_ID     Int
  Datum_bestanden DateTime?   @map("Datum bestanden") @vereindb.Date
  Erstellt_am     DateTime?   @map("Erstellt am") @vereindb.Date
  Geaendert_am    DateTime?   @map("Geaendert am") @vereindb.Date
  ff_mitglied     ff_mitglied @relation(fields: [FF_Mitglied_ID], references: [ID], onUpdate: Restrict, map: "ff_mitglied_lehrgang_ibfk_1")
  lehrgang        lehrgang    @relation(fields: [Lehrgang_ID], references: [ID], onUpdate: Restrict, map: "ff_mitglied_lehrgang_ibfk_2")

  @@index([FF_Mitglied_ID], map: "FF_Mitglied_ID")
  @@index([Lehrgang_ID], map: "Lehrgang_ID")
}

model funktion_ff {
  ID                  Int                   @id @default(autoincrement())
  Name                String                @vereindb.VarChar(100)
  Ist_Admin           Boolean               @default(false)
  Erstellt_am         DateTime?             @map("Erstellt am") @vereindb.Date
  Geaendert_am        DateTime?             @map("Geaendert am") @vereindb.Date
  mitglied_funktionen mitglied_funktionen[]
}

model funktion_jf {
  ID           Int       @id @default(autoincrement())
  Name         String    @vereindb.VarChar(100)
  Ist_admin    Boolean   @default(false)
  Erstellt_am  DateTime  @map("Erstellt am") @vereindb.Date
  Geaendert_am DateTime? @map("Geaendert am") @vereindb.Date
}

model jf_erziehungsberechtigter {
  ID             Int         @id @default(autoincrement())
  JF_Mitglied_ID Int
  Person_ID      Int
  Erstellt_am    DateTime?   @map("Erstellt am") @vereindb.Date
  Geaendert_am   DateTime?   @map("Geaendert am") @vereindb.Date
  jf_mitglied    jf_mitglied @relation(fields: [JF_Mitglied_ID], references: [ID], onUpdate: Restrict, map: "jf_erziehungsberechtigter_ibfk_1")
  person         person      @relation(fields: [Person_ID], references: [ID], onUpdate: Restrict, map: "jf_erziehungsberechtigter_ibfk_2")

  @@index([JF_Mitglied_ID], map: "jf_mitglied_id")
  @@index([Person_ID], map: "person_id")
}

model jf_mitglied {
  ID                        Int                         @id @default(autoincrement())
  Person_ID                 Int
  Eintrittsdatum            DateTime                    @vereindb.Date
  Austrittsdatum            DateTime?                   @vereindb.Date
  Aufnahmedatum             DateTime?                   @vereindb.Date
  Status                    jf_mitglied_Status          @default(aktiv)
  Erstellt_am               DateTime?                   @map("Erstellt am") @vereindb.Date
  Geaendert_am              DateTime?                   @map("Geaendert am") @vereindb.Date
  allergie                  allergie[]                  @ignore
  jf_erziehungsberechtigter jf_erziehungsberechtigter[]
  person                    person                      @relation(fields: [Person_ID], references: [ID], onDelete: Cascade, map: "jf_mitglied_ibfk_1")

  @@index([Person_ID], map: "jf_mitglied_ibfk_1")
}

model lehrgang {
  ID                   Int                    @id @default(autoincrement())
  Abk_rzung            String?                @map("Abk端rzung") @vereindb.VarChar(255)
  Beschreibung         String?                @vereindb.Text
  Reihenfolge          Int?
  Erstellt_am          DateTime?              @map("Erstellt am") @vereindb.Date
  Geaendert_am         DateTime?              @map("Geaendert am") @vereindb.Date
  ff_mitglied_lehrgang ff_mitglied_lehrgang[]
}

model mitglied_funktionen {
  ID           Int                     @id @default(autoincrement())
  Mitglied_ID  Int
  Funktion_ID  Int
  Typ          mitglied_funktionen_Typ
  Erstellt_am  DateTime?               @map("Erstellt am") @vereindb.Date
  Geaendert_am DateTime?               @map("Geaendert am") @vereindb.Date
  ff_mitglied  ff_mitglied             @relation(fields: [Mitglied_ID], references: [ID], onDelete: Cascade, map: "mitglied_funktionen_ibfk_1")
  funktion_ff  funktion_ff             @relation(fields: [Funktion_ID], references: [ID], onDelete: Cascade, map: "mitglied_funktionen_ibfk_2")

  @@index([Mitglied_ID], map: "mitglied_funktionen_ibfk_1")
  @@index([Funktion_ID], map: "mitglied_funktionen_ibfk_2")
}

model mitglied_login {
  ID           Int                @id @default(autoincrement())
  Benutzer_ID  Int
  Mitglied_ID  Int
  Typ          mitglied_login_Typ
  Erstellt_am  DateTime           @map("Erstellt am") @vereindb.Date
  Geaendert_am DateTime?          @map("Geaendert am") @vereindb.Date
  person       person             @relation(fields: [Mitglied_ID], references: [ID], onDelete: Cascade, map: "mitglied_login_ibfk_2")

  @@index([Benutzer_ID], map: "mitglied_login_ibfk_1")
  @@index([Mitglied_ID], map: "mitglied_login_ibfk_2")
}

model person {
  ID                        Int                         @id @default(autoincrement())
  Vorname                   String                      @vereindb.VarChar(100)
  Name                      String                      @vereindb.VarChar(100)
  Geburtsdatum              DateTime?                   @vereindb.Date
  Strasse                   String?                     @vereindb.VarChar(255)
  Hausnummer                String?                     @vereindb.VarChar(32)
  Postleitzahl              String?                     @vereindb.VarChar(32)
  Ort                       String?                     @vereindb.VarChar(255)
  Email                     String?                     @vereindb.VarChar(255)
  HandyNr                   Int?
  Erstellt_am               DateTime                    @map("Erstellt am") @vereindb.Date
  Geaendert_am              DateTime?                   @map("Geaendert am") @vereindb.Date
  ff_mitglied               ff_mitglied[]
  jf_erziehungsberechtigter jf_erziehungsberechtigter[]
  jf_mitglied               jf_mitglied[]
  mitglied_login            mitglied_login[]
  teilnahme                 teilnahme[]
}

model teilnahme {
  ID               Int           @id @default(autoincrement())
  Mitglied_ID      Int
  Veranstaltung_ID Int
  Typ              teilnahme_Typ
  Erstellt_am      DateTime      @map("Erstellt am") @vereindb.Date
  Geaendert_am     DateTime?     @map("Geaendert am") @vereindb.Date
  person           person        @relation(fields: [Mitglied_ID], references: [ID], onDelete: Cascade, map: "teilnahme_ibfk_1")

  @@index([Mitglied_ID], map: "teilnahme_ibfk_1")
  @@index([Veranstaltung_ID], map: "teilnahme_ibfk_4")
}

enum mitglied_funktionen_Typ {
  ff
  jf
}

enum mitglied_login_Typ {
  ff
  jf
}

enum teilnahme_Typ {
  einsatz
  dienstabend
}

enum ff_mitglied_Status {
  aktiv
  anwaerter
  ausgetreten
}

enum jf_mitglied_Status {
  aktiv
  anwaerter
  ausgetreten
}

enum einsatz_Art {
  brand
  hilfeleistung
  sonstiges
}
